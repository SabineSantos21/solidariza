name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install --force

      - name: Clean previous coverage folder
        run: rm -rf coverage || true

      - name: Run unit tests with coverage
        run: |
          echo "🏃‍♀️ Executando testes com cobertura..."
          sudo apt-get update
          sudo apt-get install -y libnss3 libxss1 libatk-bridge2.0-0 libgtk-3-0
          npx ng test --code-coverage --codeCoverageDirectory=coverage --watch=false --browsers=ChromeHeadless --no-progress || true
          echo "✅ Testes finalizados."

      - name: Verificar cobertura gerada
        run: |
          echo "📂 Verificando arquivos de cobertura..."
          ls -la coverage || echo "❌ Pasta coverage/ não existe"
          cat coverage/lcov.info | head -n 20 || echo "❌ Arquivo lcov.info não encontrado!"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=SabineSantos21_solidariza
            -Dsonar.organization=sabinesantos21
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.sources=src
            -Dsonar.exclusions=**/*.spec.ts,**/node_modules/**
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.typescript.tsconfigPaths=src/tsconfig.spec.json
            -Dsonar.sourceEncoding=UTF-8

      - name: Build Angular project
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: "Solidariza-Web"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
